{
  "type": "custom-component",
  "name": "sub-modal",
  "nodeName": null,
  "description": null,
  "children": [
    {
      "name": "div",
      "classList": [
        "modal-header"
      ],
      "children": [
        {
          "name": "div",
          "classList": [
            "modal-title"
          ],
          "children": [
            {
              "name": "text",
              "textContent": "Title",
              "evaluate": false
            }
          ]
        },
        {
          "name": "div",
          "classList": [
            "modal-close"
          ],
          "events": {
            "click": "$ctrl.onCancelClick()"
          },
          "children": [
            {
              "name": "text",
              "textContent": "Ã—",
              "evaluate": false
            }
          ]
        }
      ]
    },
    {
      "name": "div",
      "classList": [
        "modal-body"
      ],
      "children": []
    },
    {
      "name": "div",
      "classList": [
        "modal-footer"
      ],
      "children": [
        {
          "name": "Button",
          "nodeName": "bln-button",
          "attributes": [
            {
              "property": "core",
              "value": ""
            }
          ],
          "classList": [
            "btn-cancel"
          ],
          "conditionalClasses": [],
          "contentType": "text",
          "displayExpression": "",
          "events": {},
          "iterate": {
            "array": "",
            "variable": "",
            "trackByIndex": false
          },
          "styles": [],
          "children": [],
          "type": "core-component",
          "expressions": [
            {
              "expression": "\"default\"",
              "to": "type"
            },
            {
              "expression": "'Cancel'",
              "to": "label"
            },
            {
              "expression": "$ctrl.onCancelClick()",
              "to": "onClick"
            }
          ]
        },
        {
          "name": "Button",
          "nodeName": "bln-button",
          "attributes": [
            {
              "property": "core",
              "value": ""
            }
          ],
          "classList": [
            "btn-ok"
          ],
          "conditionalClasses": [],
          "contentType": "text",
          "displayExpression": "",
          "events": {},
          "iterate": {
            "array": "",
            "variable": "",
            "trackByIndex": false
          },
          "styles": [],
          "children": [],
          "type": "core-component",
          "expressions": [
            {
              "expression": "\"primary\"",
              "to": "type"
            },
            {
              "expression": "'OK'",
              "to": "label"
            },
            {
              "expression": "$ctrl.onOkClick()",
              "to": "onClick"
            }
          ]
        }
      ]
    }
  ],
  "variables": [
    {
      "name": "onOkClick",
      "description": "This function is called when OK button is clicked.",
      "type": "method",
      "body": "$ctrl.result = 'ok'\n$ctrl.onClose()",
      "invokeOnLoad": false,
      "isAsync": false,
      "returnType": {
        "name": "any"
      },
      "parameters": [],
      "watch": []
    },
    {
      "name": "onCancelClick",
      "description": "This function is called when Cancel button is clicked.",
      "type": "method",
      "body": "$ctrl.result = 'cancel'\n$ctrl.onClose()",
      "invokeOnLoad": false,
      "isAsync": false,
      "returnType": {
        "name": "any"
      },
      "parameters": [],
      "watch": []
    },
    {
      "name": "graphql",
      "type": "graphql-api",
      "id": "graphql-api"
    },
    {
      "name": "graphFnc",
      "description": "",
      "type": "method",
      "body": "$ctrl.graphql.query.weather({\ncity: \"New York\" },\n    {\n        id: true,\n        cityName: true,\n        currentWeather: {\n            description: true,\n            humidity: true,\n            pressure: true,\n            status: true,\n            temp: true,\n            tempHigh: true,\n            tempLow: true,\n            windSpeed: true,\n        },\n    })\n    .then((result) => {\n        $ctrl.results = JSON.stringify(result, null, 2);\n    })",
      "invokeOnLoad": true,
      "isAsync": false,
      "returnType": {
        "name": "any"
      },
      "parameters": [],
      "watch": []
    }
  ],
  "bindings": [
    {
      "name": "onClose",
      "type": "<",
      "default": "() => {}",
      "description": "This function should be called to close the modal.",
      "visibleWhen": "",
      "label": "",
      "group": "",
      "example": "",
      "actions": [],
      "propertyType": "function"
    },
    {
      "name": "result",
      "type": "<",
      "default": "",
      "description": "The result of the modal that is returned after the modal is closed.",
      "visibleWhen": "",
      "label": "",
      "group": "",
      "example": "",
      "actions": [],
      "propertyType": "enum",
      "enumOptions": [
        {
          "value": "ok"
        },
        {
          "value": "cancel"
        }
      ]
    }
  ],
  "modules": [],
  "formControl": null,
  "styles": [],
  "directories": null,
  "externalScripts": [],
  "externalStylesheets": [],
  "localScripts": [],
  "localStylesheets": [
    {
      "path": "index.css"
    }
  ]
}